*.include "C:\Users\kevin\Desktop\my THING\school\SUTD\ISTD Term 1\50.002 Computation Structures\jsim\nominal.jsim" 
*.include "C:\Users\kevin\Desktop\my THING\school\SUTD\ISTD Term 1\50.002 Computation Structures\jsim\stdcell.jsim" 
*.include "C:\Users\kevin\Desktop\my THING\school\SUTD\ISTD Term 1\50.002 Computation Structures\jsim\lab6pc.jsim"
*.include "C:\Users\kevin\Desktop\my THING\school\SUTD\ISTD Term 1\50.002 Computation Structures\jsim\Lab2" 
.subckt pc clk reset pcsel[2:0] jt[31:0] offset[31:0] ia[31:0] dmux[31:0] 

*5-INPUT PCSEL MUX 
*ensure jmp can only clear or leave the SP bit unchanged
Xjmp jt31 ia31 jtnew31 and2

*NEED TO CONNECT BIT 31 OF PC+4 TO PC31 DIRECTLY
*0x80000004 is loaded into pc during interrupts
Xmuxfirst1 pcsel0#32 pcsel1#32 
+ dmux[31:0]//d0 ia31?
+ offset[31:0]//d1 ia31?
+ jtnew31 jt[30:0]//d2
+ vdd 0#28 vdd 0#2//d3 0x80000004
+ ztrans[31:0] mux4

*0x80000008 is loaded into the pc during exceptions
Xmussecond1 pcsel2#32
+ ztrans[31:0] //d0
+ vdd 0#27 vdd 0#3 //d1 0x80000008
+ d[31:0] mux2

*RESET MUX 

*0x80000000 is loaded into the pc during reset
Xresetmux1 reset#32
+ d[31:0]
+ vdd 0#31
+ dpc[31:0] mux2

*PC REGISTER
Xpc dpc[31:0] clk#32 ia[31:0] dreg

*+4
.connect ia0 dmux0
.connect ia1 dmux1

Xaddfourdigittwo ia2 dmux2 inverter
.connect ia2 c2

Xaddfourrest ia[31:3] c[30:2] dmux[31:3] c[31:3] addfour

.ends 

.subckt addfour a cin s cout
Xcout a cin cout and2
Xsum a cin s xor2 
.ends
